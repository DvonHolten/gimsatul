#!/bin/sh
usage () {
cat<<EOF
usage: configure [ <option> ... ]

where '<option>' is one of the following:

-c | --check      enable assertion checking even without '-g'
-g | --debugging  debugging compile (implies '-c', '-l' and '-s')
-h | --help       print this command line option summary
-l | --logging    include logging code even without '-g'
-s | --symbols    add symbol table even without '-g'
-q | --quiet      disable messages and profiling
                 
-f...             passed to compiler, e.g., '-fsanitize=address,undefined'
-m32              enforce 32-bit compilation (also implies '-mpc64')
--no-fast-path    no lock-less fast path for synchronization
EOF
exit 1
}
compact=yes
debug=no
symbols=no
logging=no
fastpath=yes
check=no
options=""
quiet=no
die () {
  echo "configure: error: $*" $* 1>&2
  exit 1
}
while [ $# -gt 0 ]
do
  case "$1" in
    -c|--check) check=yes;;
    -g|--debugging) debug=yes;;
    -h|--help) usage; exit 0;;
    -l|--logging) logging=yes;;
    -s|--symbols) symbols=yes;;
    -q|--quiet) quiet=yes;;
    -fsanitize=*thread*) options="$options $1"; fastpath=no;;
    -f*) options="$options $1";;
    -m32) options="$options $1 -mpc64";;
    --no-fast-path) fastpath=no;;
    *)  die "invalid option '$1' (try '-h')";;
  esac
  shift
done
[ "$CC" = "" ] && CC=gcc
CFLAGS="-Wall$options"
[ $debug = yes ] && check=yes
[ $debug = yes ] && symbols=yes
[ $debug = yes ] && logging=yes
[ $quiet = yes ] && logging=no
[ $debug = no ] && CFLAGS="$CFLAGS -O3"
[ $symbols = yes ] && CFLAGS="$CFLAGS -ggdb3"
[ $logging = yes ] && CFLAGS="$CFLAGS -DLOGGING"
[ $check = no ] && CFLAGS="$CFLAGS -DNDEBUG"
[ $fastpath = no ] && CFLAGS="$CFLAGS -DNFASTPATH"
[ $quiet = yes ] && CFLAGS="$CFLAGS -DQUIET"
echo "configure: $CC $CFLAGS"
rm -f makefile
sed -e "s#@CC@#$CC#;s#@CFLAGS@#$CFLAGS#" makefile.in > makefile
echo "configure: generated 'makefile'"
